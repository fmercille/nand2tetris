function Course.new 5
push constant 8
call Memory.alloc 1
pop pointer 0
push constant 32
push argument 0
call String.length 1
call Math.min 2
pop this 1
call Wall.getNumWalls 0
pop local 2
push this 1
call Array.new 1
pop this 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push argument 0
push local 0
call String.charAt 2
pop local 1
label WHILE_EXP1
push local 1
push local 2
push constant 1
sub
gt
not
if-goto WHILE_END1
push local 1
push local 2
sub
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push this 0
add
push local 1
call Obstacle.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop this 4
push constant 1
pop this 3
push constant 0
pop this 7
push constant 1
pop this 6
push constant 0
pop this 5
push constant 0
pop this 2
push constant 0
push this 0
add
pop pointer 1
push that 0
pop local 4
push local 4
call Obstacle.activate 1
pop temp 0
push pointer 0
return
function Course.addObstacle 1
push argument 0
pop pointer 0
push this 3
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call Obstacle.activate 1
pop temp 0
push this 3
pop this 4
push this 3
push constant 1
add
pop this 3
push this 3
push this 1
push constant 1
sub
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 3
label IF_FALSE0
push constant 0
return
function Course.advance 2
push argument 0
pop pointer 0
push this 7
push constant 1
add
pop this 7
push this 7
push constant 4
push this 6
sub
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push constant 0
pop this 7
push this 2
pop local 1
label WHILE_EXP0
push local 1
push this 4
eq
not
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
push constant 1
call Obstacle.advance 2
pop temp 0
push local 1
push constant 1
add
pop local 1
push local 1
push this 1
push constant 1
sub
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop local 1
label IF_FALSE1
goto WHILE_EXP0
label WHILE_END0
push this 4
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
push constant 1
call Obstacle.advance 2
pop temp 0
push local 0
call Obstacle.getY 1
push constant 100
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Course.addObstacle 1
pop temp 0
push this 5
push constant 1
add
pop this 5
push this 5
push constant 10
call Math.divide 2
push constant 1
add
pop this 6
label IF_FALSE2
push this 2
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call Obstacle.getY 1
push constant 250
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
call Obstacle.reset 1
pop temp 0
push this 2
push constant 1
add
pop this 2
push this 2
push this 1
push constant 1
sub
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
pop this 2
label IF_FALSE4
label IF_FALSE3
push constant 0
return
function Course.collides 3
push argument 0
pop pointer 0
push constant 0
pop local 1
push constant 0
pop local 2
label WHILE_EXP0
push local 1
push this 1
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
push argument 1
call Obstacle.collides 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 2
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 2
return
function Course.reset 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Obstacle.reset 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop this 4
push constant 1
pop this 3
push constant 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push constant 1
pop this 6
push constant 0
pop this 5
push constant 0
pop this 7
push local 1
call Obstacle.activate 1
pop temp 0
push constant 0
return
function Course.getScore 0
push argument 0
pop pointer 0
push this 5
return
